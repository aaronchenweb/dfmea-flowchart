{"version":3,"file":"jsmind.draggable-node.js","sources":["../src/plugins/jsmind.draggable-node.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport jsMind from 'jsmind';\n\nif (!jsMind) {\n    throw new Error('jsMind is not defined');\n}\n\nconst $ = jsMind.$;\n\nconst clear_selection =\n    'getSelection' in $.w\n        ? function () {\n              $.w.getSelection().removeAllRanges();\n          }\n        : function () {\n              $.d.selection.empty();\n          };\n\nconst DEFAULT_OPTIONS = {\n    line_width: 5,\n    line_color: 'rgba(0,0,0,0.3)',\n    line_color_invalid: 'rgba(255,51,51,0.6)',\n    lookup_delay: 200,\n    lookup_interval: 100,\n    scrolling_trigger_width: 20,\n    scrolling_step_length: 10,\n    shadow_node_class_name: 'jsmind-draggable-shadow-node',\n};\n\nclass DraggableNode {\n    constructor(jm, options) {\n        var opts = {};\n        jsMind.util.json.merge(opts, DEFAULT_OPTIONS);\n        jsMind.util.json.merge(opts, options);\n\n        this.version = '0.4.0';\n        this.jm = jm;\n        this.options = opts;\n        this.e_canvas = null;\n        this.canvas_ctx = null;\n        this.shadow = null;\n        this.shadow_p_x = 0;\n        this.shadow_p_y = 0;\n        this.shadow_w = 0;\n        this.shadow_h = 0;\n        this.active_node = null;\n        this.target_node = null;\n        this.target_direct = null;\n        this.client_w = 0;\n        this.client_h = 0;\n        this.offset_x = 0;\n        this.offset_y = 0;\n        this.hlookup_delay = 0;\n        this.hlookup_timer = 0;\n        this.capture = false;\n        this.moved = false;\n        this.canvas_draggable = jm.get_view_draggable();\n        this.view_panel = jm.view.e_panel;\n        this.view_panel_rect = null;\n    }\n    init() {\n        this.create_canvas();\n        this.create_shadow();\n        this.event_bind();\n    }\n    resize() {\n        this.jm.view.e_nodes.appendChild(this.shadow);\n        this.e_canvas.width = this.jm.view.size.w;\n        this.e_canvas.height = this.jm.view.size.h;\n    }\n    create_canvas() {\n        var c = $.c('canvas');\n        this.jm.view.e_panel.appendChild(c);\n        var ctx = c.getContext('2d');\n        this.e_canvas = c;\n        this.canvas_ctx = ctx;\n    }\n    create_shadow() {\n        var s = $.c('jmnode');\n        s.style.visibility = 'hidden';\n        s.style.zIndex = '3';\n        s.style.cursor = 'move';\n        s.style.opacity = '0.7';\n        s.className = this.options.shadow_node_class_name;\n        this.shadow = s;\n    }\n    reset_shadow(el) {\n        var s = this.shadow.style;\n        this.shadow.innerHTML = el.innerHTML;\n        s.left = el.style.left;\n        s.top = el.style.top;\n        s.width = el.style.width;\n        s.height = el.style.height;\n        s.backgroundImage = el.style.backgroundImage;\n        s.backgroundSize = el.style.backgroundSize;\n        s.transform = el.style.transform;\n        this.shadow_w = this.shadow.clientWidth;\n        this.shadow_h = this.shadow.clientHeight;\n    }\n    show_shadow() {\n        if (!this.moved) {\n            this.shadow.style.visibility = 'visible';\n        }\n    }\n    hide_shadow() {\n        this.shadow.style.visibility = 'hidden';\n    }\n    magnet_shadow(shadow_p, node_p, invalid) {\n        this.canvas_ctx.lineWidth = this.options.line_width;\n        this.canvas_ctx.strokeStyle = invalid\n            ? this.options.line_color_invalid\n            : this.options.line_color;\n        this.canvas_ctx.lineCap = 'round';\n        this.clear_lines();\n        this.canvas_lineto(shadow_p.x, shadow_p.y, node_p.x, node_p.y);\n    }\n    clear_lines() {\n        this.canvas_ctx.clearRect(0, 0, this.jm.view.size.w, this.jm.view.size.h);\n    }\n    canvas_lineto(x1, y1, x2, y2) {\n        this.canvas_ctx.beginPath();\n        this.canvas_ctx.moveTo(x1, y1);\n        this.canvas_ctx.lineTo(x2, y2);\n        this.canvas_ctx.stroke();\n    }\n    event_bind() {\n        var jd = this;\n        var container = this.jm.view.container;\n        $.on(container, 'mousedown', function (e) {\n            if (e.button === 0) {\n                jd.dragstart.call(jd, e);\n            }\n        });\n        $.on(container, 'mousemove', function (e) {\n            if (e.movementX !== 0 || e.movementY !== 0) {\n                jd.drag.call(jd, e);\n            }\n        });\n        $.on(container, 'mouseup', function (e) {\n            jd.dragend.call(jd, e);\n        });\n        $.on(container, 'touchstart', function (e) {\n            jd.dragstart.call(jd, e);\n        });\n        $.on(container, 'touchmove', function (e) {\n            jd.drag.call(jd, e);\n        });\n        $.on(container, 'touchend', function (e) {\n            jd.dragend.call(jd, e);\n        });\n    }\n    dragstart(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.capture) {\n            return;\n        }\n        this.active_node = null;\n        this.view_draggable = this.jm.get_view_draggable();\n\n        var jview = this.jm.view;\n        var el = this.find_node_element(e.target);\n        if (!el) {\n            console.log('throw away');\n            return;\n        }\n        if (this.view_draggable) {\n            this.jm.disable_view_draggable();\n        }\n        var nodeid = jview.get_binded_nodeid(el);\n        if (!!nodeid) {\n            var node = this.jm.get_node(nodeid);\n            if (!node.isroot) {\n                this.reset_shadow(el);\n                this.view_panel_rect = this.view_panel.getBoundingClientRect();\n                this.active_node = node;\n                this.offset_x =\n                    (e.clientX || e.touches[0].clientX) / jview.zoom_current - el.offsetLeft;\n                this.offset_y =\n                    (e.clientY || e.touches[0].clientY) / jview.zoom_current - el.offsetTop;\n                this.client_hw = Math.floor(el.clientWidth / 2);\n                this.client_hh = Math.floor(el.clientHeight / 2);\n                if (this.hlookup_delay != 0) {\n                    $.w.clearTimeout(this.hlookup_delay);\n                }\n                if (this.hlookup_timer != 0) {\n                    $.w.clearInterval(this.hlookup_timer);\n                }\n                var jd = this;\n                this.hlookup_delay = $.w.setTimeout(function () {\n                    jd.hlookup_delay = 0;\n                    jd.hlookup_timer = $.w.setInterval(function () {\n                        jd.lookup_target_node.call(jd);\n                    }, jd.options.lookup_interval);\n                }, this.options.lookup_delay);\n                jd.capture = true;\n            }\n        }\n    }\n    drag(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.capture) {\n            e.preventDefault();\n            this.show_shadow();\n            this.moved = true;\n            clear_selection();\n            var jview = this.jm.view;\n            var px = (e.clientX || e.touches[0].clientX) / jview.zoom_current - this.offset_x;\n            var py = (e.clientY || e.touches[0].clientY) / jview.zoom_current - this.offset_y;\n            // scrolling container axisY if drag nodes exceeding container\n            if (\n                e.clientY - this.view_panel_rect.top < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollTop > this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(0, -this.options.scrolling_step_length);\n                this.offset_y += this.options.scrolling_step_length / jview.zoom_current;\n            } else if (\n                this.view_panel_rect.bottom - e.clientY < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollTop <\n                    this.view_panel.scrollHeight -\n                        this.view_panel_rect.height -\n                        this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(0, this.options.scrolling_step_length);\n                this.offset_y -= this.options.scrolling_step_length / jview.zoom_current;\n            }\n            // scrolling container axisX if drag nodes exceeding container\n            if (\n                e.clientX - this.view_panel_rect.left < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollLeft > this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(-this.options.scrolling_step_length, 0);\n                this.offset_x += this.options.scrolling_step_length / jview.zoom_current;\n            } else if (\n                this.view_panel_rect.right - e.clientX < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollLeft <\n                    this.view_panel.scrollWidth -\n                        this.view_panel_rect.width -\n                        this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(this.options.scrolling_step_length, 0);\n                this.offset_x -= this.options.scrolling_step_length / jview.zoom_current;\n            }\n            this.shadow.style.left = px + 'px';\n            this.shadow.style.top = py + 'px';\n            clear_selection();\n        }\n    }\n    dragend(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.view_draggable) {\n            this.jm.enable_view_draggable();\n        }\n        if (this.capture) {\n            if (this.hlookup_delay != 0) {\n                $.w.clearTimeout(this.hlookup_delay);\n                this.hlookup_delay = 0;\n                this.clear_lines();\n            }\n            if (this.hlookup_timer != 0) {\n                $.w.clearInterval(this.hlookup_timer);\n                this.hlookup_timer = 0;\n                this.clear_lines();\n            }\n            if (this.moved) {\n                var src_node = this.active_node;\n                var target_node = this.target_node;\n                var target_direct = this.target_direct;\n                this.move_node(src_node, target_node, target_direct);\n            }\n            this.hide_shadow();\n        }\n        this.view_panel_rect = null;\n        this.moved = false;\n        this.capture = false;\n    }\n    find_node_element(el) {\n        if (\n            el === this.jm.view.e_nodes ||\n            el === this.jm.view.e_panel ||\n            el === this.jm.view.container\n        ) {\n            return null;\n        }\n        if (el.tagName.toLowerCase() === 'jmnode') {\n            return el;\n        }\n        return this.find_node_element(el.parentNode);\n    }\n    lookup_target_node() {\n        let sx = this.shadow.offsetLeft;\n        let sy = this.shadow.offsetTop;\n        if (sx === this.shadow_p_x && sy === this.shadow_p_y) {\n            return;\n        }\n        this.shadow_p_x = sx;\n        this.shadow_p_y = sy;\n\n        let target_direction =\n            this.shadow_p_x + this.shadow_w / 2 >= this.get_root_x()\n                ? jsMind.direction.right\n                : jsMind.direction.left;\n        let overlapping_node = this.lookup_overlapping_node_parent(target_direction);\n        let target_node = overlapping_node || this.lookup_close_node(target_direction);\n        if (!!target_node) {\n            let points = this.calc_point_of_node(target_node, target_direction);\n            let invalid = jsMind.node.inherited(this.active_node, target_node);\n            this.magnet_shadow(points.sp, points.np, invalid);\n            this.target_node = target_node;\n            this.target_direct = target_direction;\n        }\n    }\n    get_root_x() {\n        let root = this.jm.get_root();\n        let root_location = root.get_location();\n        let root_size = root.get_size();\n        return root_location.x + root_size.w / 2;\n    }\n\n    lookup_overlapping_node_parent(direction) {\n        let shadowRect = this.shadow.getBoundingClientRect();\n        let x = shadowRect.x + (shadowRect.width * (1 - direction)) / 2;\n        let deltaX = (this.jm.options.layout.hspace + this.jm.options.layout.pspace) * direction;\n        let deltaY = shadowRect.height;\n        let points = [\n            [x, shadowRect.y],\n            [x, shadowRect.y + deltaY / 2],\n            [x, shadowRect.y + deltaY],\n            [x + deltaX / 2, shadowRect.y],\n            [x + deltaX / 2, shadowRect.y + deltaY / 2],\n            [x + deltaX / 2, shadowRect.y + deltaY],\n            [x + deltaX, shadowRect.y],\n            [x + deltaX, shadowRect.y + deltaY / 2],\n            [x + deltaX, shadowRect.y + deltaY],\n        ];\n        for (const p of points) {\n            let n = this.lookup_node_parent_by_location(p[0], p[1]);\n            if (!!n) {\n                return n;\n            }\n        }\n    }\n\n    lookup_node_parent_by_location(x, y) {\n        return $.d\n            .elementsFromPoint(x, y)\n            .filter(\n                x => x.tagName === 'JMNODE' && x.className !== this.options.shadow_node_class_name\n            )\n            .map(el => this.jm.view.get_binded_nodeid(el))\n            .map(id => id && this.jm.mind.nodes[id])\n            .map(n => n && n.parent)\n            .find(n => n);\n    }\n\n    lookup_close_node(direction) {\n        return Object.values(this.jm.mind.nodes)\n            .filter(n => n.direction == direction || n.isroot)\n            .filter(n => this.jm.layout.is_visible(n))\n            .filter(n => this.shadow_on_target_side(n, direction))\n            .map(n => ({ node: n, distance: this.shadow_to_node(n, direction) }))\n            .reduce(\n                (prev, curr) => {\n                    return prev.distance < curr.distance ? prev : curr;\n                },\n                { node: this.jm.get_root(), distance: Number.MAX_VALUE }\n            ).node;\n    }\n\n    shadow_on_target_side(node, dir) {\n        return (\n            (dir == jsMind.direction.right && this.shadow_to_right_of_node(node) > 0) ||\n            (dir == jsMind.direction.left && this.shadow_to_left_of_node(node) > 0)\n        );\n    }\n\n    shadow_to_right_of_node(node) {\n        return this.shadow_p_x - node.get_location().x - node.get_size().w;\n    }\n\n    shadow_to_left_of_node(node) {\n        return node.get_location().x - this.shadow_p_x - this.shadow_w;\n    }\n\n    shadow_to_base_line_of_node(node) {\n        return this.shadow_p_y + this.shadow_h / 2 - node.get_location().y - node.get_size().h / 2;\n    }\n\n    shadow_to_node(node, dir) {\n        let distance_x =\n            dir === jsMind.direction.right\n                ? Math.abs(this.shadow_to_right_of_node(node))\n                : Math.abs(this.shadow_to_left_of_node(node));\n        let distance_y = Math.abs(this.shadow_to_base_line_of_node(node));\n        return distance_x + distance_y;\n    }\n\n    calc_point_of_node(node, dir) {\n        let ns = node.get_size();\n        let nl = node.get_location();\n        let node_x = node.isroot\n            ? nl.x + ns.w / 2\n            : nl.x + (ns.w * (1 + dir)) / 2 + this.options.line_width * dir;\n        let node_y = nl.y + ns.h / 2;\n        let shadow_x =\n            this.shadow_p_x + (this.shadow_w * (1 - dir)) / 2 - this.options.line_width * dir;\n        let shadow_y = this.shadow_p_y + this.shadow_h / 2;\n        return {\n            sp: { x: shadow_x, y: shadow_y },\n            np: { x: node_x, y: node_y },\n        };\n    }\n\n    move_node(src_node, target_node, target_direct) {\n        var shadow_h = this.shadow.offsetTop;\n        if (!!target_node && !!src_node && !jsMind.node.inherited(src_node, target_node)) {\n            // lookup before_node\n            var sibling_nodes = target_node.children;\n            var sc = sibling_nodes.length;\n            var node = null;\n            var delta_y = Number.MAX_VALUE;\n            var node_before = null;\n            var beforeid = '_last_';\n            while (sc--) {\n                node = sibling_nodes[sc];\n                if (node.direction == target_direct && node.id != src_node.id) {\n                    var dy = node.get_location().y - shadow_h;\n                    if (dy > 0 && dy < delta_y) {\n                        delta_y = dy;\n                        node_before = node;\n                        beforeid = '_first_';\n                    }\n                }\n            }\n            if (!!node_before) {\n                beforeid = node_before.id;\n            }\n            this.jm.move_node(src_node.id, beforeid, target_node.id, target_direct);\n        }\n        this.active_node = null;\n        this.target_node = null;\n        this.target_direct = null;\n    }\n    jm_event_handle(type, data) {\n        if (type === jsMind.event_type.resize) {\n            this.resize();\n        }\n    }\n}\n\nvar draggable_plugin = new jsMind.plugin('draggable_node', function (jm, options) {\n    var jd = new DraggableNode(jm, options);\n    jd.init();\n    jm.add_event_listener(function (type, data) {\n        jd.jm_event_handle.call(jd, type, data);\n    });\n});\n\njsMind.register_plugin(draggable_plugin);\n"],"names":["jsMind","Error","$","clear_selection","w","getSelection","removeAllRanges","d","selection","empty","DEFAULT_OPTIONS","line_width","line_color","line_color_invalid","lookup_delay","lookup_interval","scrolling_trigger_width","scrolling_step_length","shadow_node_class_name","DraggableNode","constructor","jm","options","opts","util","json","merge","this","version","e_canvas","canvas_ctx","shadow","shadow_p_x","shadow_p_y","shadow_w","shadow_h","active_node","target_node","target_direct","client_w","client_h","offset_x","offset_y","hlookup_delay","hlookup_timer","capture","moved","canvas_draggable","get_view_draggable","view_panel","view","e_panel","view_panel_rect","init","create_canvas","create_shadow","event_bind","resize","e_nodes","appendChild","width","size","height","h","c","ctx","getContext","s","style","visibility","zIndex","cursor","opacity","className","reset_shadow","el","innerHTML","left","top","backgroundImage","backgroundSize","transform","clientWidth","clientHeight","show_shadow","hide_shadow","magnet_shadow","shadow_p","node_p","invalid","lineWidth","strokeStyle","lineCap","clear_lines","canvas_lineto","x","y","clearRect","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","jd","container","on","e","button","dragstart","call","movementX","movementY","drag","dragend","get_editable","view_draggable","jview","find_node_element","target","disable_view_draggable","nodeid","get_binded_nodeid","node","get_node","isroot","getBoundingClientRect","clientX","touches","zoom_current","offsetLeft","clientY","offsetTop","client_hw","Math","floor","client_hh","clearTimeout","clearInterval","setTimeout","setInterval","lookup_target_node","console","log","preventDefault","px","py","scrollTop","scrollBy","bottom","scrollHeight","scrollLeft","right","scrollWidth","enable_view_draggable","src_node","move_node","tagName","toLowerCase","parentNode","sx","sy","target_direction","get_root_x","direction","lookup_overlapping_node_parent","lookup_close_node","points","calc_point_of_node","inherited","sp","np","root","get_root","root_location","get_location","root_size","get_size","shadowRect","deltaX","layout","hspace","pspace","deltaY","p","n","lookup_node_parent_by_location","elementsFromPoint","filter","map","id","mind","nodes","parent","find","Object","values","is_visible","shadow_on_target_side","distance","shadow_to_node","reduce","prev","curr","Number","MAX_VALUE","dir","shadow_to_right_of_node","shadow_to_left_of_node","shadow_to_base_line_of_node","abs","ns","nl","node_x","node_y","sibling_nodes","children","sc","length","delta_y","node_before","beforeid","dy","jm_event_handle","type","data","event_type","draggable_plugin","plugin","add_event_listener","register_plugin"],"mappings":"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"}