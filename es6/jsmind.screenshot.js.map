{"version":3,"file":"jsmind.screenshot.js","sources":["../src/plugins/jsmind.screenshot.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport jsMind from 'jsmind';\nimport domtoimage from 'dom-to-image';\n\nif (!jsMind) {\n    throw new Error('jsMind is not defined');\n}\n\nif (!domtoimage) {\n    throw new Error('dom-to-image is required');\n}\n\nconst $ = jsMind.$;\n\nconst DEFAULT_OPTIONS = {\n    filename: null,\n    watermark: {\n        left: $.w.location,\n        right: 'https://github.com/hizzgdev/jsmind',\n    },\n    background: 'transparent',\n};\n\nclass JmScreenshot {\n    constructor(jm, options) {\n        var opts = {};\n        jsMind.util.json.merge(opts, DEFAULT_OPTIONS);\n        jsMind.util.json.merge(opts, options);\n\n        this.version = '0.2.0';\n        this.jm = jm;\n        this.options = opts;\n    }\n\n    shoot() {\n        let c = this.create_canvas();\n        let ctx = c.getContext('2d');\n        Promise.resolve(ctx)\n            .then(() => this.draw_background(ctx))\n            .then(() => this.draw_lines(ctx))\n            .then(() => this.draw_nodes(ctx))\n            .then(() => this.draw_watermark(c, ctx))\n            .then(() => this.download(c))\n            .then(() => this.clear(c));\n    }\n\n    create_canvas() {\n        let c = $.c('canvas');\n        c.width = this.jm.view.size.w;\n        c.height = this.jm.view.size.h;\n        c.style.visibility = 'hidden';\n        this.jm.view.e_panel.appendChild(c);\n        return c;\n    }\n\n    clear(c) {\n        c.parentNode.removeChild(c);\n    }\n\n    draw_background(ctx) {\n        return new Promise(\n            function (resolve, _) {\n                const bg = this.options.background;\n                if (!!bg && bg !== 'transparent') {\n                    ctx.fillStyle = this.options.background;\n                    ctx.fillRect(0, 0, this.jm.view.size.w, this.jm.view.size.h);\n                }\n                resolve(ctx);\n            }.bind(this)\n        );\n    }\n\n    draw_lines(ctx) {\n        return new Promise(\n            function (resolve, _) {\n                this.jm.view.graph.copy_to(ctx, function () {\n                    resolve(ctx);\n                });\n            }.bind(this)\n        );\n    }\n\n    draw_nodes(ctx) {\n        return domtoimage\n            .toSvg(this.jm.view.e_nodes, { style: { zoom: 1 } })\n            .then(this.load_image)\n            .then(function (img) {\n                ctx.drawImage(img, 0, 0);\n                return ctx;\n            });\n    }\n\n    draw_watermark(c, ctx) {\n        ctx.textBaseline = 'bottom';\n        ctx.fillStyle = '#000';\n        ctx.font = '11px Verdana,Arial,Helvetica,sans-serif';\n        if (!!this.options.watermark.left) {\n            ctx.textAlign = 'left';\n            ctx.fillText(this.options.watermark.left, 5.5, c.height - 2.5);\n        }\n        if (!!this.options.watermark.right) {\n            ctx.textAlign = 'right';\n            ctx.fillText(this.options.watermark.right, c.width - 5.5, c.height - 2.5);\n        }\n        return ctx;\n    }\n\n    load_image(url) {\n        return new Promise(function (resolve, reject) {\n            let img = new Image();\n            img.onload = function () {\n                resolve(img);\n            };\n            img.onerror = reject;\n            img.src = url;\n        });\n    }\n\n    download(c) {\n        var name = (this.options.filename || this.jm.mind.name) + '.png';\n\n        if (navigator.msSaveBlob && !!c.msToBlob) {\n            var blob = c.msToBlob();\n            navigator.msSaveBlob(blob, name);\n        } else {\n            var blob_url = c.toDataURL();\n            var anchor = $.c('a');\n            if ('download' in anchor) {\n                anchor.style.visibility = 'hidden';\n                anchor.href = blob_url;\n                anchor.download = name;\n                $.d.body.appendChild(anchor);\n                var evt = $.d.createEvent('MouseEvents');\n                evt.initEvent('click', true, true);\n                anchor.dispatchEvent(evt);\n                $.d.body.removeChild(anchor);\n            } else {\n                location.href = blob_url;\n            }\n        }\n    }\n}\n\nlet screenshot_plugin = new jsMind.plugin('screenshot', function (jm, options) {\n    var jmss = new JmScreenshot(jm, options);\n    jm.screenshot = jmss;\n    jm.shoot = function () {\n        jmss.shoot();\n    };\n});\n\njsMind.register_plugin(screenshot_plugin);\n"],"names":["jsMind","Error","domtoimage","$","DEFAULT_OPTIONS","filename","watermark","left","w","location","right","background","JmScreenshot","constructor","jm","options","opts","util","json","merge","this","version","shoot","c","create_canvas","ctx","getContext","Promise","resolve","then","draw_background","draw_lines","draw_nodes","draw_watermark","download","clear","width","view","size","height","h","style","visibility","e_panel","appendChild","parentNode","removeChild","_","bg","fillStyle","fillRect","bind","graph","copy_to","toSvg","e_nodes","zoom","load_image","img","drawImage","textBaseline","font","textAlign","fillText","url","reject","Image","onload","onerror","src","name","mind","navigator","msSaveBlob","msToBlob","blob","blob_url","toDataURL","anchor","href","d","body","evt","createEvent","initEvent","dispatchEvent","screenshot_plugin","plugin","jmss","screenshot","register_plugin"],"mappings":"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"}